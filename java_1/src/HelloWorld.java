public class HelloWorld {
    public static void main(String[] args) {
        // 자바 전 사람이 메모리 직접 메모리 관리 => 메모리 사용 후 반환 하지않아서 메모리 부족 프로그램 사망
        // 자바는 가비지 컬렉터(GC) => 메모리 자동 정리 해줌
        // 멀티 스레드 지원
        // 하나의 프로그램에서 동시에 여러작업가능 
        // 채팅하면서 채팅하는 사람과 파일을 주고 받을 수 있음 => 멀티 스레드 프로그램이 작성되어있어서 가능
        // 요즘 대부분 언어에서 지원
        // 운영체제에 독립적 => c는 종속, python 독립
        // 가능한 이유 => 자바 가상머신때문(jvm)
        // vm : 가상컴퓨터, 실제 컴퓨터가 아니라 소프트웨어로 만들어진 컴퓨터
        // 자바프로그램이 실행되는 가상 컴퓨터(jvm)
        // 일반 어플리케이션은 os(운영체제)에서 실행되는 java프로그램은 jvm위에서 실행된다. os와 독립적일 수 있음
        // 자바는 여러 운영체제별로 jvm이 만들어져있기때문에 하나로 작성된 자바로 수정없이 실행가능



        // 패키지라는 것은 서로 관련된 클래스들을 모아둔 것

        // javac 자바파일 => 컴파일
        // 환경변수를 설정하면 컴퓨터가 실행파일찾을때 현재 디렉토리에 없으면 여기에 등록된 제일 위에 경로부터 
        // 순서대로 찾음
        // 환경변수없으면 c:/javac위치/javac 클래스명.java
        // hello.class파일이 생성된것을 알 수 있음 =? 컴파일러인 javac가 hello.java를 읽어서 jvm알아들을 수 있는
        // 기계어로 변환한것
        // type Hello.class해보면 사람이알아볼수 없는 언어로 된걸 알 수 있음 => 이런 파일을 바이너리파일 or 이진파일
        // 이라고함
        // hello.java와 같이 사람이 알아볼 수 있는 파일을 텍스트파일이라고함
        //실행하려면 java Hello(class이름)
        // 실행할때는 확장자를 붙이지않음
        System.out.println("Hello world");
    }
}
